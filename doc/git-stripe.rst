``git stripe``: Push a sequence of commit IDs to a remote repository
--------------------------------------------------------------------

USAGE
=====

.. code-block:: bash

    git stripe [-h] [-q] [-v] [-D] [-d] [-f] [-o OFFSET] [-p PREFIX] [-r REMOTES] [-n]
                  [count] [commit_id]

Positional arguments
  ``count``: The number of stripe branches to be created
  ``commit_id``: Branch/commit ID of the first stripe (or HEAD~ if none)

Optional arguments
  ``-h, --help``: show this help message and exit

  ``-q, --quiet``: Suppress all output

  ``-v, --verbose``: Report all messages in great detail

  ``-D, --delete-all``: Delete all striped branches

  ``-d, --delete``: Delete the striped branches for this request

  ``-f, --force``: Force push over existing stripes

  ``-o OFFSET, --offset OFFSET``: Offset to start numbering stripes

  ``-p PREFIX, --prefix PREFIX``: Base name for stripe branches (autogenerated if none)

  ``-r REMOTES, --remotes REMOTES``: One or more remote remotes to push to, separated by colon. "." means the local repo, "^" means the upstream repo

  ``-n, --no-run``: If set, commands will be printed but not executed

DESCRIPTION
===========

Starting with a given commit ID, and moving backwards from there,
push each commit ID to its own disposable branch name.

Useful to bring these commits to the attention of your CI if has missed some of
your commit IDs because you rebased or pushed a sequences of commits too fast.

EXAMPLES
========

``Assume the current branch is master:``

``git stripe``
    Pushes HEAD~, HEAD~2 and HEAD~3 into their own branches named
    _gitz_stripe_master_0, _gitz_stripe_master_1
    and _gitz_stripe_master_2

``git stripe --delete``
``git stripe -d``
    Delete any branches named _gitz_stripe_master_0,
    _gitz_stripe_master_1 and _gitz_stripe_master_2.

    git stripe -d does not fail if some or all of the branches
    to be deleted are missing

``git stripe --base-branch=BBBB``
``git stripe -b=BBBB``
    Pushes HEAD~, HEAD~2 and HEAD~3 into their own branches named
    BBBB_0, BBBB_1, BBBB_2

``git stripe --count=2 --base-branch=BBBB``
``git stripe -c=2 -b=BBBB``
    Pushes HEAD~ and HEAD~2 into their own branches named BBBB_0
    and BBBB_1
