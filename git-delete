#!/usr/bin/env python3
from gitz import git_functions
from gitz import program
from gitz.env import ENV
from gitz.git import GIT

USAGE = """\
git-delete: Deletes one or more branches locally and on all remotes

USAGE:
    git delete <branch-name> [...<branch-name>]
"""

HELP = """
By default, the branches `master` and `develop` and the remote
`upstream` are protected, which means that they are not allowed
to be delete.

Using the --all/-a flag allows protected branches and remotes
to be deleteded.

It's also possible to change which branches or remotes are protected
by setting the environment variable GITZ_PROTECTED_BRANCHES or
GITZ_PROTECTED_REMOTES to a list separated by colons, or to an empty
string to turn off protection entirely.
"""
PROGRAM = program.Program(USAGE, HELP)

_HELP_ALL = 'Delete all, even protected remotes or branches'


def git_delete():
    args = PROGRAM.parse_args(_add_arguments)
    PROGRAM.require_clean_workspace()

    branch = git_functions.current_branch()
    branches = git_functions.branches()

    remaining_branches = set(branches).difference(args.target)
    if not remaining_branches:
        PROGRAM.error_and_exit('This would delete all the branches')

    remotes = GIT.remote()
    if not args.all:
        protected = set(ENV.protected_branches()).intersection(args.target)
        if protected:
            PROGRAM.error_and_exit('These branches are protected:', *protected)
        pr = ENV.protected_remotes()
        remotes = [r for r in remotes if r not in pr]

    if branch not in remaining_branches:
        for b in ENV.reference_branches():
            if b in remaining_branches:
                GIT.checkout(b)
                break
        else:
            GIT.checkout(sorted(remaining_branches)[0])

    total_count = git_functions.delete(args.target, PROGRAM, remotes)
    if total_count:
        print('git-delete:', total_count, 'branches delete')
    else:
        PROGRAM.error_and_exit('No branches deleted')


def _add_arguments(parser):
    parser.add_argument('target', nargs='+')
    parser.add_argument('-a', '--all', action='store_true', help=_HELP_ALL)


if __name__ == '__main__':
    git_delete()
