#!/usr/bin/env bash
set -Eeo pipefail

usage() {
    cat <<EOF
git amp:
    AMend the last commit message and force-Push, somewhat safely

USAGE:
    git amp [commit message here]

DANGER:
    Rewrites history!

DESCRIPTION:
    AMend the last commit message and force-Push to its upstream branch.

    If arguments are given, they are used as the commit message,
    otherwise an editor is brought up to create edit the previous message.

    If that is successful, uses ``git push --force-with-lease`` to
    rewrite the previous commit immediately.

    git amp rewrites history and should only be used on private branches.

    For your protection, 'git amp' will fail with a message if there are
    any changes in your workspace which would get accidentally mixed into
    the previous commit.

EXAMPLES:
    git amp
        Bring up an editor for a new commit message, then amend and push

    git amp Some commit message here
        Amend and push with the new message "Some commit message here"

    git amp "Commit message! (fix #127)"
        Amend and push with message "Commit message! (fix #127)"
        (You need quotes if the message includes special shell
        characters like (, ), #, !, etc.)
EOF
}

while getopts ":h" opt; do
  case $opt in
    h)
      usage ; exit ; ;;
  esac
done

if ! git diff-index --quiet HEAD -- ; then
    echo "ERROR: Changes in your workspace would be overwritten."
    exit 1
fi

if [ "$1" == "" ]; then
    git commit --amend
else
    git commit --amend -m "$*"
fi
git push --force-with-lease
