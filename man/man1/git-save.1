.TH GIT-SAVE 1 "04 November, 2019" "Gitz 0.9.13" "Gitz Manual"

.SH NAME
git-save - Save and restore state of the git repository

.SH USAGE
.sp
.nf
.ft C
git save [-h] [-q] [-v] [-a] [-d] [-n] [state]
.ft P
.fi


.SH POSITIONAL ARGUMENTS
\fBstate\fP: Save to this state if set. Otherwise, print a commit ID that saves this

\fBstate.\fP: 


.SH OPTIONAL ARGUMENTS
\fB\-h, \-\-help\fP: show this help message and exit

\fB\-q, \-\-quiet\fP: Suppress all output

\fB\-v, \-\-verbose\fP: Report all messages in great detail

\fB\-a, \-\-all\fP: Save even untracked files

\fB\-d, \-\-do_not_stash\fP: If set, do not stash the commit ID, just print it out

\fB\-n, \-\-no\-run\fP: If set, commands will be printed but not executed


.SH DESCRIPTION
Saves and restores the exact state of the git repository
including files staged but not commited and unknown files.

.SH DANGER
Rewrites history!

.SH EXAMPLES
.TP
.B \fB git save \fP
Prints the commit ID that represents this current state

