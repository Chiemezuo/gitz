.TH GIT-RESTORE 1 "02 November, 2019" "Gitz 0.9.13" "Gitz Manual"

.SH NAME
git-restore - Save and restore state of the git repository

.SH USAGE
.sp
.nf
.ft C
git restore [-h] [-q] [-v] [-a] [-n] [state]
.ft P
.fi


.SH POSITIONAL ARGUMENTS
\fBstate\fP: Restore to this state if set. Otherwise, print a commit ID that saves this state.


.SH OPTIONAL ARGUMENTS
\fB\-h, \-\-help\fP: show this help message and exit

\fB\-q, \-\-quiet\fP: Suppress all output

\fB\-v, \-\-verbose\fP: Report all messages in great detail

\fB\-a, \-\-all\fP: Restore even untracked files

\fB\-n, \-\-no\-run\fP: If set, commands will be printed but not executed


.SH DESCRIPTION
Saves and restores the exact state of the git repository
including files staged but not commited and unknown files.

.SH DANGER
Rewrites history!

.SH EXAMPLES
.TP
.B \fB git restore \fP
Prints the commit ID that represents this current state

